// Variables used: nibble 0 of QUEST_SouthTulimshar
// traduzido por Ernando Quirino


001-1.gat,35,43,0|script|Bernard|117,
{
    // This NPC previously used the variable TMW_Quest
    callfunc "ClearVarTMW_Quest";

    set @state, ((QUEST_SouthTulimshar & NIBBLE_0_MASK) >> NIBBLE_0_SHIFT);

    if(@state >= 4) goto L_Done2;
    if(@state == 3) goto L_Progress2;
    if(@state == 2) goto L_Done1;
    if(@state == 1) goto L_Progress;

    set @TEMP, rand(2);
    if(@TEMP == 1) goto L_Opening1;
    goto L_Opening0;

L_Opening0:
    mes "[Bernard]";
    mes "\"Tulimshar está cheio de vermes. Hey, eu preciso de um favor, você pode me ajudar?\"";
    next;
    goto L_Ask;

L_Opening1:
    mes "[Bernard]";
    mes "\"Verme assado com sopa é... maravilhoso, simplesmente divino!  Pode me ajudar a matar alguns?\"";
    next;
    goto L_Ask;

L_Ask:
    menu
        "Sim.", L_Yes,
        "Não.", L_Close;

L_Yes:
    set @TEMP, rand(2);
    if(@TEMP == 1) goto L_Req1;
    goto L_Req0;

L_Req0:
    mes "[Bernard]";
    mes "\"Ae!  Eu preciso de um Verme Torrado para minha sopa.\"";
    next;
    goto L_Set;

L_Req1:
    mes "[Bernard]";
    mes "\"Me traga um Verme Torrado. Eu lhe darei alguma coisa caso o faça.\"";
    next;
    goto L_Set;

L_Set:
    set @state, 1;
    callsub S_Update_Var;
    mes "[Bernard]";
    mes "\"Por favor, traga para mim!\"";
    goto L_Close;

L_Progress:
    if (countitem("RoastedMaggot") < 1) goto L_NotEnough;
    mes "[Bernard]";
    mes "\"Oooh, perfeito! É perfeito!";
    mes "Você me trouxe um Verme Torrado!  Aqui, tome um bolo para você.\"";
    getinventorylist;
    if (@inventorylist_count - (countitem("RoastedMaggot") == 1) > 99 - (countitem("CherryCake") == 0) ) goto L_TooMany;
    delitem "RoastedMaggot", 1;
    getexp 100, 0;
    getitem "CherryCake", 5;
    set @state, 2;
    callsub S_Update_Var;
    next;
    mes "\"Agora vamos ver...\"";
    goto L_Close;

L_Progress2:
    if (countitem("MaggotSlime") < 3) goto L_NotEnough1;
    mes "[Bernard]";
    mes "\"Muito bom!  É perfeito, simplesmente perfeito!";
    mes "Você me trouxe 3 Gosmas de Verme!  Aqui, tome uma cerveja para você.\"";
    getinventorylist;
    if ((@inventorylist_count - (countitem("MaggotSlime") == 3) > 99  - (countitem("Beer") == 0) )) goto L_TooMany;
    delitem "MaggotSlime", 3;
    getexp 100, 0;
    getitem "Beer", 3;
    set @state, 4;
    callsub S_Update_Var;
    goto L_Close;

L_NotEnough:
    mes "[Bernard]";
    mes "\"Oh, por favor, volte e me traga um Verme Torrado. Eu preciso de uma sopa de vermes!\"";
    goto L_Close;

L_NotEnough1:
    mes "[Bernard]";
    mes "\"Oh, por favor, volte e me traga 3 Gosmas de Vermes, quero terminar minha sopa!\"";
    goto L_Close;

L_Done1:
    mes "[Bernard]";
    mes "\"Muito obrigado!\"";
    mes "\"Mas... algo está faltando para minha sopa estar pronta.\"";
    next;
    mes "\"Eu preciso de 3 Gosmas de Vermes.\"";
    mes "\"Me traga eles, eu lhe darei algo bom.\"";
    set @state, 3;
    callsub S_Update_Var;
    goto L_Close;

L_Done2:
    mes "[Bernard]";
    mes "\"Eu não disse isso antes, mas eu sempre coloco cerveja em minha sopa. Eu espero que você goste de cerveja.\"";
    next;
    mes "\"Cerveja é vida!\"";
    goto L_Close;

L_Close:
    set @TEMP, 0;
    set @state, 0;
    close;

L_TooMany:
    next;
    mes "[Bernard]";
    mes "\"Você não tem espaço para a minha recompensa. Volte quando tiver espaço no inventário.\"";
    goto L_Close;

S_Update_Var:
    set QUEST_SouthTulimshar, (QUEST_SouthTulimshar & ~(NIBBLE_0_MASK) | (@state << NIBBLE_0_SHIFT));
    return;
}
