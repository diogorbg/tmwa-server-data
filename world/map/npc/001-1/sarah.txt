// Variables used: nibble 1 of QUEST_SouthTulimshar

001-1.gat,137,78,0|script|Sarah|106,
{
    // This NPC previously used the variable TMW_Quest
    callfunc "ClearVarTMW_Quest";

    set @state, ((QUEST_SouthTulimshar & NIBBLE_1_MASK) >> NIBBLE_1_SHIFT);

    if (@state >= 2) goto L_Done;
    if (@state == 1) goto L_Progress;

    mes "[Sarah]";
    mes "\"Cara, estou com fome!\"";
    next;

    set @TEMP, rand(2);
    if(@TEMP == 1) goto L_Opening1;
    goto L_Opening0;

L_Opening0:
    mes "\"Bolo de Cereja é o melhor!\"";
    next;
    goto L_Ask;

L_Opening1:
    mes "\"Mmm, Bolo de Cereja... Eu amo isso!\"";
    next;
    goto L_Ask;

L_Ask:
    mes "\"Você pode me dar uma fatia de Bolo de Cereja?  Por favor?\"";
    menu
        "Sim.", L_Req0,
        "Não.", L_Close;

L_Req0:
    mes "[Sarah]";
    mes "\"Yippee!  Me dê uma fatia de Bolo de Cereja, e eu lhe darei um bom chapéu!\"";
    next;
    set @state, 1;
    callsub S_Update_Var;
    mes "[Sarah]";
    mes "\"Please bring it to me!\"";
    goto L_Close;

L_Progress:
    if (countitem("CherryCake") < 1)
        goto L_NotEnough;
    mes "[Sarah]";
    mes "\"Whee!\"";
    next;
    mes "Você me trouxe o Bolo de Cereja!  Aqui está seu novo chepéu, como prometido.\"";
    emotion EMOTE_TONGUE;
    getinventorylist;
    if ((@inventorylist_count - (countitem("CherryCake") == 1)) > 99) goto L_TooMany;
    delitem "CherryCake", 1;
    getitem "SerfHat", 1;
    set @state, 2;
    callsub S_Update_Var;
    goto L_Close;

L_NotEnough:
    mes "[Sarah]";
    mes "\"Oh, Estou com fome!  Por favor me dê um Bolo de Cereja!\"";
    goto L_Close;

L_Done:
    mes "[Sarah]";
    mes "\"Isso é muito saboro, eu não consigo mais parar de comer... Obrigado!\"";
    emotion EMOTE_TONGUE;
    goto L_Close;

L_Close:
    set @TEMP, 0;
    set @state, 0;
    close;

L_TooMany:
    next;
    mes "[Sarah]";
    mes "\"Você não tem espaço para minha recompensa. Volte quando tiver.\"";
    goto L_Close;

S_Update_Var:
    set QUEST_SouthTulimshar, (QUEST_SouthTulimshar & ~(NIBBLE_1_MASK) | (@state << NIBBLE_1_SHIFT));
    return;
}
